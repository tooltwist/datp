/* Copyright Tooltwist Innovations Limited - All Rights Reserved
 * This file is part of DATP and as such is proprietary and confidential software.
 * Unauthorized copying of this file, via any medium is strictly prohibited. All
 * rights reserved. No warranty, explicit or implicit, provided. In no event shall
 * the author or owner be liable for any claim or damages.
 */

//import Scheduler, { DUMP, EVENT, STEP_START_EVENT, TICK, TRANSACTION_START_EVENT } from './Scheduler2'

const TRANSACTION_COMPLETION_HANDLER_NAME = 'tx_end_CH'

async function main() {

  // Add a transactions to the scheduler
  const txId = 't-90872645906258976'
  await EVENT(TRANSACTION_START_EVENT, {
    metadata: {
      txId,
      transactionType: 'example',
      tenant: {
        tenantId: 'fred',
      },
      // pipeline: 'example',
      completionHandlerName: TRANSACTION_COMPLETION_HANDLER_NAME,
      contextForCompletionHandler: {
        txId,
        userCompletionHandlerName: 'sendReplyCH',
        // options
      }
    },
    data: {
      amount: 123.456
    }
  })

  await TICK()
  // await pause(6)

  // Add a task to the scheduler and see what happens
  // await EVENT(STEP_START_EVENT, {
  //   metadata: {
  //     txId: 't-123',
  //     stepId: 's-456',
  //     definition: {
  //       stepType: 'example/demo',
  //     }
  //     // tenant: {
  //     //   tenantId: 'fred',
  //     // },
  //     // completionHandlerName: 'call me some time'
  //   },
  //   data: {
  //   }
  // })

  // DUMP()



  // await EVENT(TRANSACTION_START_EVENT, {
  //   tx: '2'
  //   // metadata: {
  //   //   mdYarp: 'abc'
  //   // },
  //   // data: {
  //   //   txId: '123'
  //   // }
  // })




  // const status = await Scheduler.getStatus()
  // console.log(`status=`, status)

  // DUMP()

  // await TICK()
  // DUMP()


  // await pause(8)
  // DUMP()



  // TICK()
  // DUMP()

}

async function pause(seconds) {
  return new Promise((resolve, reject) => {
    setTimeout(() => {
      return resolve()
    }, seconds * 1000)
  })
}

main().catch(e => {
  console.log(`e=`, e)
})